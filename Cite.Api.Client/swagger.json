{
  "openapi": "3.0.1",
  "info": {
    "title": "Cite API",
    "version": "v1"
  },
  "paths": {
    "/api/evaluations/{evaluationId}/teams/{teamId}/actions": {
      "get": {
        "tags": [
          "Action"
        ],
        "summary": "Gets Actions for the specified evaluation team\r\nfor the current move",
        "description": "Returns a list of the Actions.\r\n<para />\r\nAccessible to a User that is a member of the specified Team",
        "operationId": "getActionsByEvaluationTeam",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/moves/{moveNumber}/actions": {
      "get": {
        "tags": [
          "Action"
        ],
        "summary": "Gets Actions for the specified evaluation and move",
        "description": "Returns a list of the Actions.\r\n<para />\r\nAccessible to a Content Developer",
        "operationId": "getActionsByEvaluationMove",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moveNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/moves/{moveNumber}/teams/{teamId}/actions": {
      "get": {
        "tags": [
          "Action"
        ],
        "summary": "Gets Actions for the specified evaluation, move and team",
        "description": "Returns a list of the Actions.\r\n<para />\r\nAccessible to a User that is a member of the specified Team",
        "operationId": "getActionsByEvaluationMoveTeam",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moveNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/{id}": {
      "get": {
        "tags": [
          "Action"
        ],
        "summary": "Gets a specific Action by id",
        "description": "Returns the Action with the id specified\r\n<para />\r\nAccessible to a User that is a member of a Team within the specified Action",
        "operationId": "getAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Action",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Action"
        ],
        "summary": "Updates an Action",
        "description": "Updates an Action with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Action",
        "operationId": "updateAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Action to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Action values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Action"
        ],
        "summary": "Deletes an Action",
        "description": "Deletes an Action with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Action",
        "operationId": "deleteAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Action to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions": {
      "post": {
        "tags": [
          "Action"
        ],
        "summary": "Creates a new Action",
        "description": "Creates a new Action with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createAction",
        "requestBody": {
          "description": "The data to create the Action with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/{id}/check": {
      "put": {
        "tags": [
          "Action"
        ],
        "summary": "Checks an Action",
        "description": "Checks an Action",
        "operationId": "checkAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Action to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/{id}/uncheck": {
      "put": {
        "tags": [
          "Action"
        ],
        "summary": "Unchecks an Action",
        "description": "Unchecks an Action",
        "operationId": "uncheckAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Action to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations": {
      "get": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Gets Evaluations",
        "description": "Returns a list of Evaluations.",
        "operationId": "getEvaluations",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScoringModelId",
            "in": "query",
            "description": "Whether or not to return records only for a designated team",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "Whether or not to return records only for descriptions containing the designated string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Creates a new Evaluation",
        "description": "Creates a new Evaluation with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createEvaluation",
        "requestBody": {
          "description": "The data used to create the Evaluation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/my-evaluations": {
      "get": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Gets Evaluations for the current user",
        "description": "Returns a list of the current user's active Evaluations.",
        "operationId": "getMyEvaluations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/evaluations": {
      "get": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Gets Evaluations for the requested user",
        "description": "Returns a list of the requested user's active Evaluations.",
        "operationId": "getUserEvaluations",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{id}": {
      "get": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Gets a specific Evaluation by id",
        "description": "Returns the Evaluation with the id specified",
        "operationId": "getEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Evaluation",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Updates an Evaluation",
        "description": "Updates an Evaluation with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the evaluation parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Evaluation to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Evaluation values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Evaluation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Deletes an Evaluation",
        "description": "Deletes an Evaluation with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Evaluation to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{id}/situation": {
      "put": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Updates an Evaluation situation details",
        "description": "Updates an Evaluation with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the evaluation parameter",
        "operationId": "updateEvaluationSituation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Evaluation to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Evaluation values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationSituation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationSituation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationSituation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{id}/move/{move}": {
      "put": {
        "tags": [
          "Evaluation"
        ],
        "summary": "Sets an Evaluation Current Move Number",
        "description": "Updates an Evaluation with the move number specified.",
        "operationId": "setEvaluationCurrentMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Evaluation to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "move",
            "in": "path",
            "description": "The move value",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluationteams": {
      "get": {
        "tags": [
          "EvaluationTeam"
        ],
        "summary": "Gets all EvaluationTeams in the system",
        "description": "Returns a list of all of the EvaluationTeams in the system.\r\n<para />\r\nOnly accessible to a SuperTeam",
        "operationId": "getEvaluationTeams",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluationTeam"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluationTeam"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluationTeam"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EvaluationTeam"
        ],
        "summary": "Creates a new EvaluationTeam",
        "description": "Creates a new EvaluationTeam with the attributes specified\r\n<para />\r\nAccessible only to a SuperTeam",
        "operationId": "createEvaluationTeam",
        "requestBody": {
          "description": "The data to create the EvaluationTeam with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationTeam"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationTeam"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationTeam"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTeam"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTeam"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTeam"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluationteams/{id}": {
      "get": {
        "tags": [
          "EvaluationTeam"
        ],
        "summary": "Gets a specific EvaluationTeam by id",
        "description": "Returns the EvaluationTeam with the id specified\r\n<para />\r\nOnly accessible to a SuperTeam",
        "operationId": "getEvaluationTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the EvaluationTeam",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTeam"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTeam"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationTeam"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EvaluationTeam"
        ],
        "summary": "Deletes a EvaluationTeam",
        "description": "Deletes a EvaluationTeam with the specified id\r\n<para />\r\nAccessible only to a SuperTeam",
        "operationId": "deleteEvaluationTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the EvaluationTeam to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/teams/{teamId}": {
      "delete": {
        "tags": [
          "EvaluationTeam"
        ],
        "summary": "Deletes a EvaluationTeam by team ID and evaluation ID",
        "description": "Deletes a EvaluationTeam with the specified team ID and evaluation ID\r\n<para />\r\nAccessible only to a SuperTeam",
        "operationId": "deleteEvaluationTeamByIds",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "description": "ID of a evaluation.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "ID of a team.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/unreadarticlecount": {
      "get": {
        "tags": [
          "Gallery"
        ],
        "summary": "Gets the evaluation's unread article count for the requesting user",
        "description": "Returns the count of unread articles.",
        "operationId": "getEvaluationUnreadArticleCount",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadArticles"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadArticles"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadArticles"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/live": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Checks the liveliness health endpoint",
        "description": "Returns a HealthReport of the liveliness health check",
        "operationId": "getLiveliness",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/ready": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Checks the readiness health endpoint",
        "description": "Returns a HealthReport of the readiness health check",
        "operationId": "getReadiness",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthReport"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/version": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Returns the current version of the API",
        "description": "Returns the version.",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/moves": {
      "get": {
        "tags": [
          "Move"
        ],
        "summary": "Gets Moves by evaluation",
        "description": "Returns a list of Moves for the evaluation.",
        "operationId": "getByEvaluation",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Move"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Move"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Move"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/moves/{id}": {
      "get": {
        "tags": [
          "Move"
        ],
        "summary": "Gets a specific Move by id",
        "description": "Returns the Move with the id specified",
        "operationId": "getMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Move",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Move"
        ],
        "summary": "Updates a  Move",
        "description": "Updates a Move with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the move parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Move to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Move values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Move"
        ],
        "summary": "Deletes a  Move",
        "description": "Deletes a  Move with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteMove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Move to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/moves": {
      "post": {
        "tags": [
          "Move"
        ],
        "summary": "Creates a new Move",
        "description": "Creates a new Move with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createMove",
        "requestBody": {
          "description": "The data used to create the Move",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Move"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Move"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets all Permission in the system",
        "description": "Returns a list of all of the Permissions in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getPermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Creates a new Permission",
        "description": "Creates a new Permission with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createPermission",
        "requestBody": {
          "description": "The data to create the Permission with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/my-permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets Permissions for the current user",
        "description": "Returns a list of the current user's Permissions.",
        "operationId": "getMyPermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets Permissions for the specified user",
        "description": "Returns a list of the specified user's Permissions.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getPermissionsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets a specific Permission by id",
        "description": "Returns the Permission with the id specified\r\n<para />\r\nAccessible to a SuperUser or a User that is a member of a Team within the specified Permission",
        "operationId": "getPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Permission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission"
        ],
        "summary": "Updates a Permission",
        "description": "Updates a Permission with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Permission",
        "operationId": "updatePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Exericse to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Permission values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "summary": "Deletes a Permission",
        "description": "Deletes a Permission with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Permission",
        "operationId": "deletePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Permission to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets Roles for the specified evaluation",
        "description": "Returns a list of the Roles.\r\n<para />\r\nAccessible to a User that is a member of the specified Evaluation",
        "operationId": "getRolesByEvaluation",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/teams/{teamId}/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets Roles for the specified evaluation team",
        "description": "Returns a list of the Roles.\r\n<para />\r\nAccessible to a User that is a member of the specified Team",
        "operationId": "getRolesByEvaluationTeam",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets a specific Role by id",
        "description": "Returns the Role with the id specified\r\n<para />\r\nAccessible to a User that is a member of a Team within the specified Role",
        "operationId": "getRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Updates a Role",
        "description": "Updates a Role with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Role",
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Role to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Role values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Deletes a Role",
        "description": "Deletes a Role with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Role",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Role to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Creates a new Role",
        "description": "Creates a new Role with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createRole",
        "requestBody": {
          "description": "The data to create the Role with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{roleId}/users/{userId}/add": {
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Adds a User to a Role",
        "description": "Adds the specified User to the specified Role",
        "operationId": "addUserToRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The Id of the Role to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The updated Role values",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{roleId}/users/{userId}/remove": {
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Removes a User to a Role",
        "description": "Removes the specified User to the specified Role",
        "operationId": "removeUserFromRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The Id of the Role to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The updated Role values",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringcategories": {
      "get": {
        "tags": [
          "ScoringCategory"
        ],
        "summary": "Gets ScoringCategories",
        "description": "Returns a list of ScoringCategories.",
        "operationId": "getScoringCategories",
        "parameters": [
          {
            "name": "Description",
            "in": "query",
            "description": "Whether or not to return records only for descriptions containing the designated string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringCategory"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ScoringCategory"
        ],
        "summary": "Creates a new ScoringCategory",
        "description": "Creates a new ScoringCategory with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createScoringCategory",
        "requestBody": {
          "description": "The data used to create the ScoringCategory",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringmodel/{scoringModelId}/scoringcategories": {
      "get": {
        "tags": [
          "ScoringCategory"
        ],
        "summary": "Gets ScoringCategories for the designated ScoringModel",
        "description": "Returns a list of ScoringCategories for the ScoringModel.",
        "operationId": "getScoringCategoriesByScoringModelId",
        "parameters": [
          {
            "name": "scoringModelId",
            "in": "path",
            "description": "The ID of the ScoringModel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringCategory"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringcategories/{id}": {
      "get": {
        "tags": [
          "ScoringCategory"
        ],
        "summary": "Gets a specific ScoringCategory by id",
        "description": "Returns the ScoringCategory with the id specified",
        "operationId": "getScoringCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScoringCategory",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScoringCategory"
        ],
        "summary": "Updates a  ScoringCategory",
        "description": "Updates a ScoringCategory with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the scoringCategory parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateScoringCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the ScoringCategory to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ScoringCategory values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringCategory"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScoringCategory"
        ],
        "summary": "Deletes a  ScoringCategory",
        "description": "Deletes a  ScoringCategory with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteScoringCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScoringCategory to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringmodels": {
      "get": {
        "tags": [
          "ScoringModel"
        ],
        "summary": "Gets ScoringModels",
        "description": "Returns a list of ScoringModels.",
        "operationId": "getScoringModels",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "Whether or not to return records only for descriptions containing the designated string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "description": "Whether or not to return archived records",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringModel"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ScoringModel"
        ],
        "summary": "Creates a new ScoringModel",
        "description": "Creates a new ScoringModel with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createScoringModel",
        "requestBody": {
          "description": "The data used to create the ScoringModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringmodels/{id}": {
      "get": {
        "tags": [
          "ScoringModel"
        ],
        "summary": "Gets a specific ScoringModel by id",
        "description": "Returns the ScoringModel with the id specified",
        "operationId": "getScoringModel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScoringModel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScoringModel"
        ],
        "summary": "Updates a  ScoringModel",
        "description": "Updates a ScoringModel with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the scoringModel parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateScoringModel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the ScoringModel to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ScoringModel values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringModel"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScoringModel"
        ],
        "summary": "Deletes a  ScoringModel",
        "description": "Deletes a  ScoringModel with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteScoringModel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScoringModel to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringoptions": {
      "get": {
        "tags": [
          "ScoringOption"
        ],
        "summary": "Gets ScoringOptions",
        "description": "Returns a list of ScoringOptions.",
        "operationId": "getScoringOptions",
        "parameters": [
          {
            "name": "Description",
            "in": "query",
            "description": "Whether or not to return records only for descriptions containing the designated string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringOption"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringOption"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringOption"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ScoringOption"
        ],
        "summary": "Creates a new ScoringOption",
        "description": "Creates a new ScoringOption with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createScoringOption",
        "requestBody": {
          "description": "The data used to create the ScoringOption",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringOption"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringOption"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringOption"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringcategory/{scoringCategoryId}/scoringoptions": {
      "get": {
        "tags": [
          "ScoringOption"
        ],
        "summary": "Gets ScoringOptions for the designated ScoringCategory",
        "description": "Returns a list of ScoringOptions for the ScoringCategory.",
        "operationId": "getScoringOptionsByScoringCategoryId",
        "parameters": [
          {
            "name": "scoringCategoryId",
            "in": "path",
            "description": "The ID of the ScoringCategory",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringOption"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringOption"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoringOption"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringoptions/{id}": {
      "get": {
        "tags": [
          "ScoringOption"
        ],
        "summary": "Gets a specific ScoringOption by id",
        "description": "Returns the ScoringOption with the id specified",
        "operationId": "getScoringOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScoringOption",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScoringOption"
        ],
        "summary": "Updates a  ScoringOption",
        "description": "Updates a ScoringOption with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the scoringOption parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateScoringOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the ScoringOption to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated ScoringOption values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringOption"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringOption"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScoringOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoringOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScoringOption"
        ],
        "summary": "Deletes a  ScoringOption",
        "description": "Deletes a  ScoringOption with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteScoringOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the ScoringOption to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissions": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Gets Submissions",
        "description": "Returns a list of Submissions.",
        "operationId": "getSubmissions",
        "parameters": [
          {
            "name": "EvaluationId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScoringModelId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TeamId",
            "in": "query",
            "description": "Whether or not to return records only for a designated team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Submission"
        ],
        "summary": "Creates a new Submission",
        "description": "Creates a new Submission with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createSubmission",
        "requestBody": {
          "description": "The data used to create the Submission",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/my-submissions": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Gets Submissions by evaluation for current user",
        "description": "Returns a list of Submissions for the evaluation for the current user.",
        "operationId": "getMineByEvaluation",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/teams/{teamId}/submissions": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Gets Submissions by evaluation team",
        "description": "Returns a list of Submissions for the evaluation team specified.",
        "operationId": "getByEvaluationTeam",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Submission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissions/{id}": {
      "get": {
        "tags": [
          "Submission"
        ],
        "summary": "Gets a specific Submission by id",
        "description": "Returns the Submission with the id specified",
        "operationId": "getSubmission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Submission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Submission"
        ],
        "summary": "Updates a  Submission",
        "description": "Updates a Submission with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the submission parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateSubmission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Submission to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Submission values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Submission"
        ],
        "summary": "Deletes a  Submission",
        "description": "Deletes a  Submission with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteSubmission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Submission to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissions/{id}/clear": {
      "put": {
        "tags": [
          "Submission"
        ],
        "summary": "Clears Submission Selections",
        "description": "Updates a Submission to no selections.\r\n<para />",
        "operationId": "clearSubmission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Submission to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissions/{id}/preset": {
      "put": {
        "tags": [
          "Submission"
        ],
        "summary": "Presets Submission Selections to previous move values",
        "description": "Updates a Submission to previous move submission selections.\r\n<para />",
        "operationId": "presetSubmission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Submission to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissions/teamavg": {
      "put": {
        "tags": [
          "Submission"
        ],
        "summary": "Fills in the details for a team average submission",
        "description": "Fills in the categories, options and comments for the team average submission",
        "operationId": "fillTeamAverageSubmission",
        "requestBody": {
          "description": "The team average Submission needing details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissions/teamtypeavg": {
      "put": {
        "tags": [
          "Submission"
        ],
        "summary": "Fills in the details for a teamType average submission",
        "description": "Fills in the categories, options and comments for the teamType average submission",
        "operationId": "fillTeamTypeAverageSubmission",
        "requestBody": {
          "description": "The teamType average Submission needing details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissioncategories": {
      "get": {
        "tags": [
          "SubmissionCategory"
        ],
        "summary": "Gets SubmissionCategories",
        "description": "Returns a list of SubmissionCategories.",
        "operationId": "getSubmissionCategories",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionCategory"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubmissionCategory"
        ],
        "summary": "Creates a new SubmissionCategory",
        "description": "Creates a new SubmissionCategory with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createSubmissionCategory",
        "requestBody": {
          "description": "The data used to create the SubmissionCategory",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submission/{submissionId}/submissioncategories": {
      "get": {
        "tags": [
          "SubmissionCategory"
        ],
        "summary": "Gets SubmissionCategories for the designated Submission",
        "description": "Returns a list of SubmissionCategories for the Submission.",
        "operationId": "getSubmissionCategoriesBySubmissionId",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "description": "The ID of the Submission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionCategory"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionCategory"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissioncategories/{id}": {
      "get": {
        "tags": [
          "SubmissionCategory"
        ],
        "summary": "Gets a specific SubmissionCategory by id",
        "description": "Returns the SubmissionCategory with the id specified",
        "operationId": "getSubmissionCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the SubmissionCategory",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubmissionCategory"
        ],
        "summary": "Updates a  SubmissionCategory",
        "description": "Updates a SubmissionCategory with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the submissionCategory parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateSubmissionCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the SubmissionCategory to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated SubmissionCategory values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionCategory"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubmissionCategory"
        ],
        "summary": "Deletes a  SubmissionCategory",
        "description": "Deletes a  SubmissionCategory with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteSubmissionCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the SubmissionCategory to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissioncomments": {
      "get": {
        "tags": [
          "SubmissionComment"
        ],
        "summary": "Gets SubmissionComments",
        "description": "Returns a list of SubmissionComments.",
        "operationId": "getSubmissionComments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionComment"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionComment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionComment"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubmissionComment"
        ],
        "summary": "Creates a new SubmissionComment",
        "description": "Creates a new SubmissionComment with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createSubmissionComment",
        "requestBody": {
          "description": "The data used to create the SubmissionComment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissionoption/{submissionOptionId}/submissioncomments": {
      "get": {
        "tags": [
          "SubmissionComment"
        ],
        "summary": "Gets SubmissionComments for the designated SubmissionOption",
        "description": "Returns a list of SubmissionComments for the SubmissionOption.",
        "operationId": "getSubmissionCommentsBySubmissionOptionId",
        "parameters": [
          {
            "name": "submissionOptionId",
            "in": "path",
            "description": "The ID of the SubmissionOption",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionComment"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionComment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionComment"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissioncomments/{id}": {
      "get": {
        "tags": [
          "SubmissionComment"
        ],
        "summary": "Gets a specific SubmissionComment by id",
        "description": "Returns the SubmissionComment with the id specified",
        "operationId": "getSubmissionComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the SubmissionComment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubmissionComment"
        ],
        "summary": "Updates a  SubmissionComment",
        "description": "Updates a SubmissionComment with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the submissionComment parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateSubmissionComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the SubmissionComment to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated SubmissionComment values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionComment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionComment"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubmissionComment"
        ],
        "summary": "Deletes a  SubmissionComment",
        "description": "Deletes a  SubmissionComment with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteSubmissionComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the SubmissionComment to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissionoptions": {
      "get": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Gets SubmissionOptions",
        "description": "Returns a list of SubmissionOptions.",
        "operationId": "getSubmissionOptions",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "Whether or not to return records only for a designated user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionOption"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionOption"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionOption"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Creates a new SubmissionOption",
        "description": "Creates a new SubmissionOption with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createSubmissionOption",
        "requestBody": {
          "description": "The data used to create the SubmissionOption",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOption"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOption"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOption"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/scoringcategory/{scoringCategoryId}/submissionoptions": {
      "get": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Gets SubmissionOptions for the designated ScoringCategory",
        "description": "Returns a list of SubmissionOptions for the ScoringCategory.",
        "operationId": "getSubmissionOptionsByScoringCategoryId",
        "parameters": [
          {
            "name": "scoringCategoryId",
            "in": "path",
            "description": "The ID of the ScoringCategory",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionOption"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionOption"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionOption"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissionoptions/{id}": {
      "get": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Gets a specific SubmissionOption by id",
        "description": "Returns the SubmissionOption with the id specified",
        "operationId": "getSubmissionOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the SubmissionOption",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Updates a  SubmissionOption",
        "description": "Updates a SubmissionOption with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the submissionOption parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateSubmissionOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the SubmissionOption to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated SubmissionOption values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOption"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOption"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionOption"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Deletes a  SubmissionOption",
        "description": "Deletes a  SubmissionOption with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteSubmissionOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the SubmissionOption to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissionoptions/{id}/select": {
      "put": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Sets the selected state of a SubmissionOption to true",
        "description": "Sets the SubmissionOption to selected.",
        "operationId": "selectSubmissionOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the SubmissionOption to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/submissionoptions/{id}/deselect": {
      "put": {
        "tags": [
          "SubmissionOption"
        ],
        "summary": "Sets the selected state of a SubmissionOption to false",
        "description": "Sets the SubmissionOption to not selected.",
        "operationId": "deselectSubmissionOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the SubmissionOption to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Submission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets all Team in the system",
        "description": "Returns a list of all of the Teams in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeams",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Creates a new Team",
        "description": "Creates a new Team with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or an Administrator",
        "operationId": "createTeam",
        "requestBody": {
          "description": "The data to create the Team with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/myteams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets Evaluation Teams for the current user",
        "description": "Returns a list of the current user's Evaluation Teams.",
        "operationId": "getMyEvaluationTeams",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets Teams for the specified user",
        "description": "Returns a list of the specified user's Teams.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets Teams for the specified group",
        "description": "Returns a list of the specified group's Teams.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getGroupTeams",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets Teams for the specified evaluation",
        "description": "Returns a list of the specified evaluation's Teams.\r\n<para />\r\nOnly accessible to an evaluation user",
        "operationId": "getEvaluationTeams",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Gets a specific Team by id",
        "description": "Returns the Team with the id specified\r\n<para />\r\nAccessible to a SuperUser or a User that is a member of a Team within the specified Team",
        "operationId": "getTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Team",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Updates a Team",
        "description": "Updates a Team with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Team",
        "operationId": "updateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Exericse to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Team values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Deletes a Team",
        "description": "Deletes a Team with the specified id\r\n<para />\r\nAccessible only to a SuperUser or a User on an Admin Team within the specified Team",
        "operationId": "deleteTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the Team to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamtypes": {
      "get": {
        "tags": [
          "TeamType"
        ],
        "summary": "Gets TeamTypes",
        "description": "Returns a list of TeamTypes.",
        "operationId": "getTeamTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamType"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamType"
        ],
        "summary": "Creates a new TeamType",
        "description": "Creates a new TeamType with the attributes specified\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "createTeamType",
        "requestBody": {
          "description": "The data used to create the TeamType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamtypes/{id}": {
      "get": {
        "tags": [
          "TeamType"
        ],
        "summary": "Gets a specific TeamType by id",
        "description": "Returns the TeamType with the id specified",
        "operationId": "getTeamType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the TeamType",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TeamType"
        ],
        "summary": "Updates a  TeamType",
        "description": "Updates a TeamType with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the teamType parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateTeamType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamType to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated TeamType values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamType"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TeamType"
        ],
        "summary": "Deletes a  TeamType",
        "description": "Deletes a  TeamType with the specified id\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "deleteTeamType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the TeamType to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/evaluations/{evaluationId}/teamusers": {
      "get": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Gets TeamUsers for the specified evaluation",
        "description": "Returns a list of the specified evaluation's TeamUsers.\r\n<para />\r\nOnly accessible to an evaluation user",
        "operationId": "getEvaluationTeamUsers",
        "parameters": [
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{teamId}/teamusers": {
      "get": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Gets TeamUsers for the specified team",
        "description": "Returns a list of the specified team's TeamUsers.\r\n<para />\r\nOnly accessible to an evaluation user",
        "operationId": "getTeamTeamUsers",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUser"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}": {
      "get": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Gets a specific TeamUser by id",
        "description": "Returns the TeamUser with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the TeamUser",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Deletes a TeamUser",
        "description": "Deletes a TeamUser with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteTeamUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the TeamUser to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers": {
      "post": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Creates a new TeamUser",
        "description": "Creates a new TeamUser with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createTeamUser",
        "requestBody": {
          "description": "The data to create the TeamUser with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/observer/set": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Sets the selected TeamUser observer flag",
        "description": "Sets the TeamUser to an observer.",
        "operationId": "setObserver",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/observer/clear": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Clears the selected TeamUser observer flag",
        "description": "Clears the TeamUser from being an observer.",
        "operationId": "clearObserver",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/incrementer/set": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Sets the selected TeamUser incrementer flag",
        "description": "Sets the TeamUser to an incrementer.",
        "operationId": "setIncrementer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/incrementer/clear": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Clears the selected TeamUser incrementer flag",
        "description": "Clears the TeamUser from being an incrementer.",
        "operationId": "clearIncrementer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/modifier/set": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Sets the selected TeamUser modifier flag",
        "description": "Sets the TeamUser to an modifier.",
        "operationId": "setModifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/modifier/clear": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Clears the selected TeamUser modifier flag",
        "description": "Clears the TeamUser from being an modifier.",
        "operationId": "clearModifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/submitter/set": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Sets the selected TeamUser submitter flag",
        "description": "Sets the TeamUser to an submitter.",
        "operationId": "setSubmitter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teamusers/{id}/submitter/clear": {
      "put": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Clears the selected TeamUser submitter flag",
        "description": "Clears the TeamUser from being an submitter.",
        "operationId": "clearSubmitter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the TeamUser to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamUser"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{teamId}/users/{userId}": {
      "delete": {
        "tags": [
          "TeamUser"
        ],
        "summary": "Deletes a TeamUser by user ID and team ID",
        "description": "Deletes a TeamUser with the specified user ID and team ID\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteTeamUserByIds",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "ID of a team.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of a user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all Users in the system",
        "description": "Returns a list of all of the Users in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates a new User",
        "description": "Creates a new User with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createUser",
        "requestBody": {
          "description": "The data to create the User with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets a specific User by id",
        "description": "Returns the User with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates a  User",
        "description": "Updates a User with the attributes specified.\r\nThe ID from the route MUST MATCH the ID contained in the user parameter\r\n<para />\r\nAccessible only to a ContentDeveloper or an Administrator",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the User to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated User values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a User",
        "description": "Deletes a User with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the User to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{teamId}/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all Users for a team",
        "description": "Returns a list of all of the Users on the team.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getTeamUsers",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "The id of the Team",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/userpermissions": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Gets all UserPermissions in the system",
        "description": "Returns a list of all of the UserPermissions in the system.\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUserPermissions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermission"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Creates a new UserPermission",
        "description": "Creates a new UserPermission with the attributes specified\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "createUserPermission",
        "requestBody": {
          "description": "The data to create the UserPermission with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/userpermissions/{id}": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Gets a specific UserPermission by id",
        "description": "Returns the UserPermission with the id specified\r\n<para />\r\nOnly accessible to a SuperUser",
        "operationId": "getUserPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the UserPermission",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              }
            }
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Deletes a UserPermission",
        "description": "Deletes a UserPermission with the specified id\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUserPermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the UserPermission to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}/permissions/{permissionId}": {
      "delete": {
        "tags": [
          "UserPermission"
        ],
        "summary": "Deletes a UserPermission by user ID and permission ID",
        "description": "Deletes a UserPermission with the specified user ID and permission ID\r\n<para />\r\nAccessible only to a SuperUser",
        "operationId": "deleteUserPermissionByIds",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of a user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "permissionId",
            "in": "path",
            "description": "ID of a permission.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Problem response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Action": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid"
          },
          "evaluation": {
            "$ref": "#/components/schemas/Evaluation"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          },
          "moveNumber": {
            "type": "integer",
            "format": "int32"
          },
          "injectNumber": {
            "type": "integer",
            "format": "int32"
          },
          "actionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isChecked": {
            "type": "boolean"
          },
          "changedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "CallingConventions": {
        "enum": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "type": "string"
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Evaluation": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus"
          },
          "currentMoveNumber": {
            "type": "integer",
            "format": "int32"
          },
          "situationTime": {
            "type": "string",
            "format": "date-time"
          },
          "situationDescription": {
            "type": "string",
            "nullable": true
          },
          "scoringModelId": {
            "type": "string",
            "format": "uuid"
          },
          "scoringModel": {
            "$ref": "#/components/schemas/ScoringModel"
          },
          "galleryExhibitId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            },
            "nullable": true
          },
          "moves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Move"
            },
            "nullable": true
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submission"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvaluationSituation": {
        "type": "object",
        "properties": {
          "situationTime": {
            "type": "string",
            "format": "date-time"
          },
          "situationDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvaluationTeam": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid"
          },
          "evaluation": {
            "$ref": "#/components/schemas/Evaluation"
          }
        },
        "additionalProperties": false
      },
      "EventAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName"
        ],
        "type": "string"
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "additionalProperties": false
      },
      "Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "innerException": {
            "$ref": "#/components/schemas/Exception"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ],
        "type": "string"
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ],
        "type": "string"
      },
      "HealthReport": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/HealthReportEntry"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "totalDuration": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "HealthReportEntry": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "exception": {
            "$ref": "#/components/schemas/Exception"
          },
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HealthStatus": {
        "enum": [
          "Unhealthy",
          "Degraded",
          "Healthy"
        ],
        "type": "string"
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "ItemStatus": {
        "enum": [
          "Pending",
          "Active",
          "Cancelled",
          "Complete",
          "Archived"
        ],
        "type": "string"
      },
      "LayoutKind": {
        "enum": [
          "Sequential",
          "Explicit",
          "Auto"
        ],
        "type": "string"
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "type": "string"
      },
      "MethodAttributes": {
        "enum": [
          "ReuseSlot",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "NewSlot",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ],
        "type": "string"
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodImplAttributes": {
        "enum": [
          "IL",
          "Native",
          "OPTIL",
          "Runtime",
          "Unmanaged",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "type": "string"
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Move": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "moveNumber": {
            "type": "integer",
            "format": "int32"
          },
          "situationTime": {
            "type": "string",
            "format": "date-time"
          },
          "situationDescription": {
            "type": "string",
            "nullable": true
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ParameterAttributes": {
        "enum": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PropertyAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "RightSideDisplay": {
        "enum": [
          "ScoreSummary",
          "HtmlBlock",
          "EmbeddedUrl",
          "Scoresheet",
          "None"
        ],
        "type": "string"
      },
      "Role": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid"
          },
          "evaluation": {
            "$ref": "#/components/schemas/Evaluation"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "ScoringCategory": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "calculationEquation": {
            "type": "string",
            "nullable": true
          },
          "isModifierRequired": {
            "type": "boolean"
          },
          "scoringWeight": {
            "type": "number",
            "format": "double"
          },
          "moveNumberFirstDisplay": {
            "type": "integer",
            "format": "int32"
          },
          "moveNumberLastDisplay": {
            "type": "integer",
            "format": "int32"
          },
          "scoringModelId": {
            "type": "string",
            "format": "uuid"
          },
          "scoringOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoringOption"
            },
            "nullable": true
          },
          "scoringOptionSelection": {
            "$ref": "#/components/schemas/ScoringOptionSelection"
          }
        },
        "additionalProperties": false
      },
      "ScoringModel": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "calculationEquation": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus"
          },
          "scoringCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoringCategory"
            },
            "nullable": true
          },
          "hideScoresOnScoreSheet": {
            "type": "boolean"
          },
          "displayCommentTextBoxes": {
            "type": "boolean"
          },
          "displayScoringModelByMoveNumber": {
            "type": "boolean"
          },
          "showPastSituationDescriptions": {
            "type": "boolean"
          },
          "rightSideDisplay": {
            "$ref": "#/components/schemas/RightSideDisplay"
          },
          "rightSideHtmlBlock": {
            "type": "string",
            "nullable": true
          },
          "rightSideEmbeddedUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScoringOption": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isModifier": {
            "type": "boolean"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "scoringCategoryId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ScoringOptionSelection": {
        "enum": [
          "Single",
          "Multiple",
          "None"
        ],
        "type": "string"
      },
      "SecurityRuleSet": {
        "enum": [
          "None",
          "Level1",
          "Level2"
        ],
        "type": "string"
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "Submission": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus"
          },
          "scoringModelId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "moveNumber": {
            "type": "integer",
            "format": "int32"
          },
          "scoreIsAnAverage": {
            "type": "boolean"
          },
          "submissionCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionCategory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmissionCategory": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "submissionId": {
            "type": "string",
            "format": "uuid"
          },
          "scoringCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "submissionOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmissionComment": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "submissionOptionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SubmissionOption": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isSelected": {
            "type": "boolean"
          },
          "selectedCount": {
            "type": "integer",
            "format": "int32"
          },
          "submissionCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "scoringOptionId": {
            "type": "string",
            "format": "uuid"
          },
          "submissionComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionComment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Team": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "evaluationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "teamTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "teamType": {
            "$ref": "#/components/schemas/TeamType"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submission"
            },
            "nullable": true
          },
          "hideScoresheet": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TeamType": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "showTeamTypeAverage": {
            "type": "boolean"
          },
          "isOfficialScoreContributor": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TeamUser": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "team": {
            "$ref": "#/components/schemas/Team"
          },
          "isObserver": {
            "type": "boolean"
          },
          "canIncrementMove": {
            "type": "boolean"
          },
          "canModify": {
            "type": "boolean"
          },
          "canSubmit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeAttributes": {
        "enum": [
          "NotPublic",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "NestedFamORAssem",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "Interface",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "CustomFormatClass",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ],
        "type": "string"
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UnreadArticles": {
        "type": "object",
        "properties": {
          "exhibitId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "count": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "nullable": true
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Submission"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPermission": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "modifiedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "permissionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:8080/realms/crucible/protocol/openid-connect/auth",
            "tokenUrl": "http://localhost:8080/realms/crucible/protocol/openid-connect/token",
            "scopes": {
              "cite": "public api access"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "cite"
      ]
    }
  ]
}